generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  isPublic      Boolean   @default(false) @map("is_public")
  image         String?
  accounts      Account[]
  sessions      Session[]
  Habit         Habit[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Habit {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  tasks     Task[]

  @@map("habits")
}

model Task {
  id           String         @id @default(cuid())
  createdAt    DateTime       @default(now()) @map("created_at")
  name         String
  habit        Habit          @relation(fields: [habitId], references: [id])
  habitId      String         @map("habit_id")
  taskWeekDays TaskWeekDays[]
  dayTasks     DayTask[]

  @@map("tasks")
}

model TaskWeekDays {
  id      String @id @default(cuid())
  weekDay Int    @map("week_day")
  taskId  String @map("task_id")
  task    Task   @relation(fields: [taskId], references: [id])

  @@unique([taskId, weekDay])
  @@map("task_week_days")
}

model Day {
  id       String    @id @default(cuid())
  date     DateTime
  dayTasks DayTask[]

  @@index([date])
  @@map("days")
}

model DayTask {
  id     String @id @default(cuid())
  dayId  String @map("day_id")
  taskId String @map("task_id")
  day    Day    @relation(fields: [dayId], references: [id])
  task   Task   @relation(fields: [taskId], references: [id])

  @@unique([dayId, taskId])
  @@map("day_tasks")
}
